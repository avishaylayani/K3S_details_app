apiVersion: apps/v1
kind: Deployment
metadata:
  name: details-app
spec:
  replicas: {{ .Values.replica_sets.details_app }}
  selector:
    matchLabels:
      app: details-app
      version: latest
  template:
    metadata:
      labels:
        app: details-app
        version: latest
    spec:
      containers:
        - name: details-app
          image: {{ .Values.images.details_app }}
          ports:
            - containerPort: 8000 # This is the internal container port
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: {{ .Values.replica_sets.postgres }}
  selector:
    matchLabels:
      app: postgres
      version: latest
  template:
    metadata:
      labels:
        app: postgres
        version: latest
    spec:
      hostname: postgres-container
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      containers:
        - name: postgres
          image: {{ .Values.images.postgres }}
          env:
            - name: DB_USERNAME
            - value: {{ .Values.db_pg.POSTGRES_USER }}
            - name: DB_PASSWORD
            - value: {{ .Values.secrets.POSTGRES_PASSWORD }}
            - name: DB_TOKEN
            - value: {{ .Values.secrets.SECRET_KEY }}
          ports:
            - containerPort: 5432 # This is the internal container port
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "128Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
        